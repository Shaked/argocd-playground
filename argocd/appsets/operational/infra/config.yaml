apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: infra-config
  namespace: argocd
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  syncPolicy:
    preserveResourcesOnDeletion: true
  generators:
    - matrix:
        generators:
          - matrix:
              generators:
                - git:
                    repoURL: https://github.com/Shaked/argocd-playground
                    revision: main
                    files:
                      - path: argocd/appsets/operational/infra/cluster-labels/config/**/argo.yaml
                    values:
                      packageName: "{{ index .path.segments 6 }}"
                      clusterPurpose: "{{ index .path.segments 7 }}"
                      environment: "{{ index .path.segments 8 }}"
                      appsetName: "infra-config"
                - clusters:
                    selector:
                      matchLabels:
                        argocd.argoproj.io/secret-type: cluster
                        cluster-purpose: "{{ .values.clusterPurpose }}"
                        environment-{{ .values.environment }}: "true"
          - list:
              elements:
                # This returns
                #   The value of `.products[.metadata.labels.product]` if exists
                #   False if .products exists, greather than 0 and  .metadata.labels.product does not exists
                #   True if .products is set to []
                #   True if .products is not set
                - appEnabled: '{{ dig "products" (index .metadata.labels "product") (eq (len (dig "products" dict .)) 0) . }}'
                  clusterNameDisabled: '{{ dig "clusterNameDisabled" (.name) "false" . }}'
                  clusterGroupDisabled: '{{ dig "clusterGroupDisabled" (index .metadata.labels "cluster-group") "false" . }}'
      selector:
        matchExpressions:
          - key: appEnabled
            operator: NotIn
            values:
              - "false"
          - key: clusterNameDisabled
            operator: NotIn
            values:
              - "true"
          - key: clusterGroupDisabled
            operator: NotIn
            values:
              - "true"
  template:
    metadata:
      name: "infra-{{ .name }}-{{ .values.environment }}-{{ .values.packageName }}"
      annotations:
        # See: https://argo-cd.readthedocs.io/en/stable/operator-manual/high_availability/#manifest-paths-annotation
        argocd.argoproj.io/manifest-generate-paths: .
        products: '{{ dig "products" "" . | toJson }}'
        product: '{{ index .metadata.labels "product" }}'
        appEnabled: "{{ .appEnabled }}"
      labels:
        cluster-purpose: "{{ .values.clusterPurpose }}"
        environment: '{{ index .metadata.labels "environment" }}'
        region: '{{ index .metadata.labels "region" }}'
        product: '{{ index .metadata.labels "product" }}'
        appset-name: "{{ .values.appsetName }}"
        package-name: '{{ .values.packageName }}'
    spec:
      project: "infra"
      sources:
        - repoURL: "{{ .chartRepoUrl }}"
          path: "charts/infra/{{ .values.packageName }}"
          targetRevision: "{{ .chartVersion }}"
          helm:
            releaseName: '{{ dig "releaseName" (printf "%s" (.values.packageName)) . }}'
            ignoreMissingValueFiles: true
            valueFiles:
              - "$values/values/operational/infra/{{ .values.packageName }}/values.yaml"
              - "$values/values/operational/infra/{{ .values.packageName }}/{{ .values.environment }}/values.yaml"
              - '$values/values/operational/infra/{{ .values.packageName }}/{{ .values.environment }}/{{ index .metadata.labels "region" }}/values.yaml'
              - '$values/values/operational/infra/{{ .values.packageName }}/{{ .values.environment }}/{{ index .metadata.labels "product" }}/values.yaml'
              - '$values/values/operational/infra/{{ .values.packageName }}/{{ .values.environment }}/{{ index .metadata.labels "product" }}/{{ index .metadata.labels "region" }}/values.yaml'
              - '$values/values/operational/infra/{{ .values.packageName }}/{{ .values.environment }}/{{ index .metadata.labels "region" }}/{{ .name }}/values.yaml'
        - repoURL: "https://github.com/Shaked/argocd-playground.git"
          targetRevision: HEAD
          ref: values
      destination:
        server: "{{ .server }}"
        namespace: '{{ dig "namespace" (printf "%s" (.values.packageName)) . }}'
  templatePatch: |
    spec:
      syncPolicy:
        syncOptions:
        - CreateNamespace=true
        - PrunePropagationPolicy=orphan
    {{- if or (not (hasKey . "autoSync")) (and (hasKey . "autoSync") (hasKey .autoSync "enabled") .autoSync.enabled) }}
        automated:
          prune: {{ dig "autoSync" "prune" "false" . }}
          selfHeal: {{ dig "autoSync" "selfHeal" "false" . }}
    {{- end }}
    #   For disabling autosync as default
    #   if and (hasKey . "autoSync") (hasKey .autoSync "enabled")
    #   if .autoSync.enabled
    #   end
